{
    "collab_server" : "",
    "contents" : "#################### Librerías #############################################\nrm(list=ls())\npacman::p_load(readxl,readr,dplyr,ggplot2,Rglpk,tidyverse,cluster)\nsource(\"Funciones.R\")\n\n#################### Archivos #############################################\n\nread_excel(\"Accesibilidad.xls\")%>% \n  mutate(COMUNA=toupper(COMUNA))%>%\n  mutate(COMUNA=chartr(\"ÁÉÍÓÚ\",\"AEIOU\",COMUNA))->Accesibilidad\n\nread_csv(\"UbicacionGeografica2016.csv\")%>%filter(ENS_01==110 | ENS_01==310 |\n                                                   ENS_02==110 | ENS_02==310 |\n                                                   ENS_03==110 | ENS_03==310 |\n                                                   ENS_04==110 | ENS_04==310 |\n                                                   ENS_05==110 | ENS_05==310 |\n                                                   ENS_06==110 | ENS_06==310 |\n                                                   ENS_07==110 | ENS_07==310 |\n                                                   ENS_08==110 | ENS_08==310 |\n                                                   ENS_09==110 | ENS_09==310 \n                                                 )%>% filter(ESTADO_ESTAB==1)%>%\n  mutate(NOM_COM_RBD=chartr(\"ÁÉÍÓÚ\",\"AEIOU\",NOM_COM_RBD))%>%\n  left_join(Accesibilidad,by=c(\"NOM_COM_RBD\" = \"COMUNA\"))%>%\n   select(RBD,NOM_RBD,\n         MRUN,RUT_SOSTENEDOR,\n         P_JURIDICA,COD_REG_RBD,\n         COD_COM_RBD,NOM_COM_RBD,\n         COD_DEPE, COD_DEPE2,\n         RURAL_RBD,CONVENIO_PIE,\n         LATITUD,LONGITUD,\n         ORI_RELIGIOSA,PAGO_MATRICULA,\n         PAGO_MENSUAL,GRADO_ACCESIBILIDAD,\n         NOMBRE_ACCESIBILIDAD,NECESIDAD_AVION)->UbicacionGeografica2016\n\nColegios_Puntaje_2012 <-\n  read_excel(\"Colegios.xls\", sheet = \"SIMCE IIM 2012 Leng\")\n\n\nread_excel(\"VistaResumenMatriculaEE2016.xlsx\") %>% \n  select(RBD, COD_DEPE, COD_DEPE2, MAT_TOTAL) ->\n  Colegios_Mat_Total\n# View(Colegios_Mat_Total)\n\nColegios_Lideres <- read_excel(\"base datos redes final.xlsx\")\n\nColegios_Redes <- read_excel(\"base datos redes final.xlsx\", \n                                     sheet = \"Redes\")\n\n## Regla de tres para calcular la SEP ###\n## Valor USE 25385 ###\n## Tomando 0.70575 USE EMERGENTE o RECUPERACION ###\n##         1.4115  USE AUTONOMO ###\n\nread_excel(\"VistaresumenprioritariospreferentesybeneficiariosSEPporEE2016.xlsx\") %>%\n  filter(CONVENIO_SEP == \"1\") %>% mutate(\n    monto = ifelse(\n      CLASIFICACION_SEP == \"AUTONOMO\",\n      1.4115 * 25385 * as.numeric(N_BEN),\n      0.70575 * 25385 * as.numeric(N_BEN)\n    )\n  ) %>% select(RBD, N_BEN, monto) -> Colegios_Ley_SEP;\n\nDim_Servicios <- read_excel(\"C:/Users/Stef/Desktop/Proyectos/ZIEMAX/Proyecto Ziemax 2/Data_Ejemplo.xlsx\", \n                            sheet = \"DIM Servicios\", col_types = c(\"text\", \n                                                                   \"text\", \"numeric\", \"numeric\", \"numeric\", \n                                                                   \"numeric\", \"numeric\", \"numeric\", \n                                                                   \"numeric\", \"numeric\", \"numeric\", \n                                                                   \"numeric\", \"numeric\", \"numeric\", \n                                                                   \"numeric\", \"numeric\", \"numeric\", \n                                                                   \"numeric\", \"numeric\"))\ncolnames(Dim_Servicios) <-\n  c(\"SERVICIO\", \"TIPO_SERVICIO\", \"PP\",\"PC\",\n    \"COSTO_TRASLADO\",\"HORAS_SERVICIO\",\"EXPERTISE\",\"COSTO_HORA\",\"BENEFICIO_COLEGIO\",\n    \"JERARQUIA_SERVICIO\",\"REPETIBLE_HASTA\",\"NIVEL\",\"CURSO\",\n    \"COSTO_ZIE_HH_INFOR\",\"COSTO_ZIE_HH\",\"EXPERTISE2\",\"COSTO_EXP_ZIEMAX\",\"LIMITE_CANTIDAD\",\n    \"EXPERTISE_INFOR\")\n\nDim_asesor <- read_excel(\"C:/Users/Stef/Desktop/Proyectos/ZIEMAX/Proyecto Ziemax 2/Data_Ejemplo.xlsx\", \n                         sheet = \"Dim Asesor\", col_types = c(\"numeric\", \n                                                             \"numeric\", \"numeric\", \"text\", \"numeric\", \n                                                             \"numeric\"))\ncolnames(Dim_asesor) <-\n  c(\"ASESOR\", \"EXPERTISE\", \"COSTO_HORA\",\"NOMBRE\",\"COSTO_ZIEMAX\",\"SUELDO\")\n\n\n##################### Limpieza de Bases ################################################\n\n\n#### Unir Bases ###\n## PUNTAJE SIMCE\n# summary(UbicacionGeografica2016)\n# summary(Colegios_Ley_SEP)\ncolnames(Colegios_Ley_SEP) <-\n  c(\"RBD\", \"NUMERO_BENEFICIADOS\", \"MONTO_SEP\")\n\nColegios_Mat_Total$RBD <- as.numeric(Colegios_Mat_Total$RBD)\nColegios_Ley_SEP$RBD <- as.numeric(Colegios_Ley_SEP$RBD)\nColegios_Ley_SEP$NUMERO_BENEFICIADOS <- as.numeric(Colegios_Ley_SEP$NUMERO_BENEFICIADOS)\nColegios_Ley_SEP$MONTO_SEP <- as.numeric(Colegios_Ley_SEP$MONTO_SEP)\n\n\n\n\nUbicacionGeografica2016%>%\n  left_join(Colegios_Puntaje_2012,by=\"RBD\")%>%   # DATA PUNTAJE\n  left_join(Colegios_Mat_Total,by=\"RBD\")%>%      # DATA MATRICULAS\n  left_join(Colegios_Lideres,by=\"RBD\")%>%        # DATA COLEGIOS LIDERES\n  left_join(Colegios_Redes,by=\"RBD\")%>%          # DATA REDES DE COLEGIOS\n  left_join(Colegios_Ley_SEP,by=\"RBD\")%>%        # COLEGIOS LEY SEP\n  mutate(\n    MONTO_SEP = ifelse(is.na(MONTO_SEP), 0, MONTO_SEP),\n    NUMERO_BENEFICIADOS = ifelse(is.na(NUMERO_BENEFICIADOS), 0, NUMERO_BENEFICIADOS),\n    RED_DE_ESCUELAS_LIDERES = ifelse(is.na(RED_DE_ESCUELAS_LIDERES), 0, RED_DE_ESCUELAS_LIDERES)\n  )%>%\n  rowwise() %>% mutate(DEPENDENCIA = switch_R(\n    condiciones = c(\n      COD_DEPE2.y == 1,\n      COD_DEPE2.y ==2,\n      COD_DEPE2.y == 3,\n      COD_DEPE2.y ==4),\n    consecuencias = c(\"Municipal\",\n                      \"Particular Subvencionado\",\n                      \"Particular Pagado\",\n                      \"Administración Delegada\",\n                      NA)))%>%\n  mutate(RURAL_RBD = switch_R(\n    condiciones = c(\n      RURAL_RBD == 1,\n      RURAL_RBD ==0),\n    consecuencias = c(\"RURAL\",\n                      \"URBANO\",\n                      NA)))%>%\n  mutate(ORI_RELIGIOSA = switch_R(\n    condiciones = c(\n      ORI_RELIGIOSA == 1,\n      ORI_RELIGIOSA == 2,\n      ORI_RELIGIOSA == 3,\n      ORI_RELIGIOSA == 4,\n      ORI_RELIGIOSA == 5,\n      ORI_RELIGIOSA == 6,\n      ORI_RELIGIOSA == 7,\n      ORI_RELIGIOSA == 8,\n      ORI_RELIGIOSA == 9),\n    consecuencias = c(\"Laica\",\n                      \"Católica\",\n                      \"Evangélica\",\n                      \"Musulmana\",\n                      \"Judía\",\n                      \"Budista\",\n                      \"Otro\",\n                      NA,\n                      NA,\n                      NA)))%>%\n    select(RBD,NOM_RBD,\n           MRUN,RUT_SOSTENEDOR,\n           COD_REG_RBD,COD_COM_RBD,NOM_COM_RBD,\n           DEPENDENCIA,\n           RURAL_RBD,CONVENIO_PIE,\n           LATITUD,LONGITUD,\n           ORI_RELIGIOSA,PAGO_MATRICULA,\n           PAGO_MENSUAL,NOMBRE_ACCESIBILIDAD,\n           NECESIDAD_AVION,\n           PROM_LECT,PROM_MAT,           # PROMEDIO NOTAS SIMCE 2012\n           MAT_TOTAL,                    # MATRICULAS TOTALES\n           RED_DE_ESCUELAS_LIDERES,      # COLEGIOS LIDERES\n           Grupo,                        # RED COLEGIOS\n           NUMERO_BENEFICIADOS,MONTO_SEP # COLEGIOS LEY SEP\n           )->Ubicacion_Actualizada; #View(Ubicacion_Actualizada)\n\nnames(Ubicacion_Actualizada)%>%toupper()->names_data;\ngsub(\" \", \"\",chartr(\"ÁÉÍÓÚ\",\"AEIOU\",names_data) ,fixed = TRUE)->names(Ubicacion_Actualizada)\n\n\n############## Generación de variables agrupadas ####################\n\nungroup(Ubicacion_Actualizada)->Ubicacion_Actualizada\nUbicacion_Actualizada$NOM_COM_RBD<-as.factor(Ubicacion_Actualizada$NOM_COM_RBD)\nUbicacion_Actualizada$MAT_TOTAL<-as.numeric(Ubicacion_Actualizada$MAT_TOTAL)\n  \n##Matricula Por Comuna ###\nUbicacion_Actualizada %>%\n  group_by(NOM_COM_RBD) %>%\n  summarise(Matricula_Comuna = sum(MAT_TOTAL, na.rm = TRUE)) -> Mat_Comuna;#View(Mat_Comuna)\n\n## Matrícula Por Sostenedor ##\nUbicacion_Actualizada%>%\n  group_by(RUT_SOSTENEDOR)%>%\n  summarise(Matricula_Sostenedor=sum(MAT_TOTAL,na.rm=TRUE))->Mat_Sostenedor;#View(Mat_Sostenedor)\n\n## Agregar Matricula por Sostenedor a Base Principal\nUbicacion_Actualizada%>%\n  left_join(Colegios_Redes,by=\"RBD\")%>%\n  mutate(GRUPO=ifelse(is.na(GRUPO),RUT_SOSTENEDOR,GRUPO))%>%\n  group_by(GRUPO)%>%\n  summarise(Matricula_Grupo=sum(MAT_TOTAL,na.rm=TRUE))->Mat_Grupo\n\n\nUbicacion_Actualizada%>%\n  left_join(Colegios_Redes,by=\"RBD\")%>%\n  mutate(GRUPO=ifelse(is.na(GRUPO),RUT_SOSTENEDOR,GRUPO))->Ubicacion_Actualizada\n\nUbicacion_Actualizada%>%\n  left_join(filter(Mat_Comuna,!is.na(Matricula_Comuna)),by=\"NOM_COM_RBD\")%>%\n  left_join(Mat_Grupo,by=\"GRUPO\")->Ubicacion_Actualizada;\nUbicacion_Actualizada%>%View()    \n\n#### Agregar Grado Accesibilidad y necesidad de avion\n\n### Agregar Colegios ley  SEP\n\nUbicacion_Actualizada%>%\n  left_join(Colegios_Ley_SEP,by=\"RBD\")%>%View()  \n  # left_join(Mat_Grupo,by=\"Grupo\")->Ubicacion_Actualizada;\nUbicacion_Actualizada%>%View()    \n\n########################## Selección de variables a utilizar ###################################\nnames(Ubicacion_Actualizada)\n\n# Pago Matricula\nUbicacion_Actualizada%>%rowwise()%>%mutate(PAGO_MATRICULA_2=switch_R(condiciones=c(PAGO_MATRICULA==\"$1.000 A $10.000\",\n                                                                                   PAGO_MATRICULA==\"$10.001 A $25.000\",\n                                                                                   PAGO_MATRICULA==\"$25.001 A $50.000\",\n                                                                                   PAGO_MATRICULA==\"$50.001 A $100.000\",\n                                                                                   PAGO_MATRICULA==\"GRATUITO\",\n                                                                                   PAGO_MATRICULA==\"MAS DE $100.000\",\n                                                                                   PAGO_MATRICULA==\"SIN INFORMACION\")\n                                                                     ,consecuencias=c(5000,\n                                                                                      17500,\n                                                                                      37500,\n                                                                                      75000,\n                                                                                      0,\n                                                                                      100000,\n                                                                                      NA,\n                                                                                      NA)\n))->Ubicacion_Actualizada;Ubicacion_Actualizada%>%summary()\n\n## Pago Mensual\nUbicacion_Actualizada%>%rowwise()%>%mutate(PAGO_MENSUAL_2=switch_R(condiciones=c(PAGO_MENSUAL==\"$1.000 A $10.000\",\n                                                                                 PAGO_MENSUAL==\"$10.001 A $25.000\",\n                                                                                 PAGO_MENSUAL==\"$25.001 A $50.000\",\n                                                                                 PAGO_MENSUAL==\"$50.001 A $100.000\",\n                                                                                 PAGO_MENSUAL==\"GRATUITO\",\n                                                                                 PAGO_MENSUAL==\"MAS DE $100.000\",\n                                                                                 PAGO_MENSUAL==\"SIN INFORMACION\")\n                                                                     ,consecuencias=c(5000,\n                                                                                      17500,\n                                                                                      37500,\n                                                                                      75000,\n                                                                                      0,\n                                                                                      100000,\n                                                                                      NA,\n                                                                                      NA)\n))->Ubicacion_Actualizada;Ubicacion_Actualizada%>%summary()\n\n# Pago Distancia\n\nUbicacion_Actualizada$NOMBRE_ACCESIBILIDAD<-levels(as.factor(Ubicacion_Actualizada$NOMBRE_ACCESIBILIDAD))\nsummary(Ubicacion_Actualizada$NOMBRE_ACCESIBILIDAD)\n# Ubicacion_Actualizada%>%rowwise()%>%mutate(NOMBRE_ACCESIBILIDAD=switch_R(condiciones=c(NOMBRE_ACCESIBILIDAD==\"Accesible\",\n#                                                                                        NOMBRE_ACCESIBILIDAD==\"Medianamente\",\n#                                                                                        NOMBRE_ACCESIBILIDAD==\"No Accesible\")\n#                                                                    ,consecuencias=c(4000,\n#                                                                                     15000,\n#                                                                                     0,\n#                                                                                     0)\n# ))->Ubicacion_Actualizada_TMP;\n\n\n\n\n\nlength(Ubicacion_Actualizada_TMP$RBD)\nsummary(Ubicacion_Actualizada_TMP)\n\n############################# Creacion Primeros Cluster de Servicios ##############\n?kmeans()\nUbicacion_Actualizada$NOMBRE_ACCESIBILIDAD<-as.numeric(Ubicacion_Actualizada$PAGO_MATRICULA)\nUbicacion_Actualizada$DEPENDENCIA<-as.factor(Ubicacion_Actualizada$DEPENDENCIA)\n\n\nset.seed(20)\nkmeans_Colegios<- kmeans(scale(Ubicacion_Actualizada[, c(\"Matricula_Grupo\",\"MAT_TOTAL\",\"MONTO_SEP\",\"NUMERO_BENEFICIADOS\")]),5,nstart = 20)\nUbicacion_Actualizada$cluster <-factor(kmeans_Colegios$cluster)\n\n\nsummary(filter(Ubicacion_Actualizada$NOMBRE_ACCESIBILIDAD,cluster==1))\nkmeans_Colegios$size\nwrite.csv(Ubicacion_Actualizada,\"Ubicacion_Actualizada.csv\")\n\nggplot(Ubicacion_Actualizada, aes(x = MAT_TOTAL, y = Matricula_Grupo)) +\n  geom_point(\n    mapping = aes(\n      x = MAT_TOTAL,\n      y = Matricula_Grupo,\n      color = Ubicacion_Actualizada$cluster\n    )\n    ##  ,   position = \"jitter\"\n  ) +\n  labs(\n    title = \"Cluster de Colegios\",\n    #subtitle = \"Basado RFM y Kmeans\",\n    x = \"Cantidad de Alumnos por Colegio\",\n    y = \"Matriculas por Grupo\",\n    color = \"Cluster Kmeans\"\n  ) + \n  scale_color_manual(values = c(\"#9370DB\", \n                                \"#FFFF00\", \n                                \"#FAAC58\", \n                                \"#40FF00\", \n                                \"#FA5882\",\n                                \"#013ADF\"))\n\n\n################## Creación primeros grupos de servicio ############\n\n\n\n\n\nUbicacion_Actualizada %>% mutate(PAGO_COLEGIO = (PAGO_MENSUAL_2 * 10 + PAGO_MATRICULA_2) *\n                                   MAT_TOTAL) %>% group_by(cluster,\n                                                           NOMBRE_ACCESIBILIDAD,\n                                                           RED_DE_ESCUELAS_LIDERES,\n                                                           DEPENDENCIA) %>% summarise(\n                                                             Monto_Escuela = sum(PAGO_COLEGIO + MONTO_SEP, na.rm = TRUE),\n                                                             MATRICULA_TOTAL = sum(MAT_TOTAL, na.rm = TRUE),\n                                                             MONTO_ALUMNO = sum(PAGO_COLEGIO + MONTO_SEP, na.rm = TRUE) / sum(MAT_TOTAL, na.rm =\n                                                                                                                                TRUE),\n                                                             N_TOTAL_COLEGIOS = n()\n                                                           ) %>% ungroup() -> GRUPOS_COLEGIOS\n\nvalores_servicios<-cbind(rep(0,nrow(GRUPOS_COLEGIOS)*nrow(Dim_Servicios)),rep(1:19,nrow(GRUPOS_COLEGIOS)),rep(1:61,nrow(Dim_Servicios)))\ncolnames(valores_servicios)<-c(\"Valor\",\"Servicios\",\"Colegios\")\nk=1\nfor(i in 1:nrow(Dim_Servicios))\n{\n  for(j in 1:nrow(GRUPOS_COLEGIOS))\n  {\n    valores_servicios[k] = Dim_Servicios$PP[i] * GRUPOS_COLEGIOS$MATRICULA_TOTAL[j] +\n      Dim_Servicios$PC[i] * GRUPOS_COLEGIOS$N_TOTAL_COLEGIOS[j] -\n      Dim_Servicios$COSTO_TRASLADO[i] * switch_R(\n        condiciones = c(\n          GRUPOS_COLEGIOS$NOMBRE_ACCESIBILIDAD[j] == \"Accesible\",\n          GRUPOS_COLEGIOS$NOMBRE_ACCESIBILIDAD[j] ==\n            \"Medianamente\",\n          GRUPOS_COLEGIOS$NOMBRE_ACCESIBILIDAD[j] ==\n            \"No Accesible\"\n        )\n        ,\n        consecuencias = c(4000,\n                          100000,\n                          2000000,\n                          0)\n      )*GRUPOS_COLEGIOS$N_TOTAL_COLEGIOS[j]\n    -(Dim_Servicios$COSTO_ZIE_HH[i]*Dim_Servicios$COSTO_EXP_ZIEMAX[i]+\n        Dim_Servicios$COSTO_ZIE_HH_INFOR[i]*Dim_Servicios$EXPERTISE_INFOR[i])*GRUPOS_COLEGIOS$N_TOTAL_COLEGIOS[j]\n    \n    k=k+1\n  }\n}\n\nView(valores_servicios)\nDim_Servicios%>%View()\n\nwrite.csv(GRUPOS_COLEGIOS,\"GRUPOS_COLEGIOS.csv\")\n# write.xlsx(GRUPOS_COLEGIOS,\"GRUPOS_COLEGIOS.xlsx\",sheetName=\"GRUPOS_COLEGIOS\")\nwrite.csv(valores_servicios,\"valores_servicios.csv\")\n\n####### Cruce para obtener grupos ##################################\n\nfor(j in 1:nrow(GRUPOS_COLEGIOS))\n{\nGRUPOS_COLEGIOS$CodGrupo[j] <-paste(as.character(GRUPOS_COLEGIOS$cluster)[j],GRUPOS_COLEGIOS$NOMBRE_ACCESIBILIDAD[j],\n                       as.character(GRUPOS_COLEGIOS$RED_DE_ESCUELAS_LIDERES[j]), as.character(GRUPOS_COLEGIOS$DEPENDENCIA[j]), \n                           sep = \"-\", collapse = NULL) \nGRUPOS_COLEGIOS$idGrupo[j]<-j\n}\n\nfor(j in 1:nrow(Ubicacion_Actualizada))\n{\nUbicacion_Actualizada$CodGrupo[j] <-paste(as.character(Ubicacion_Actualizada$cluster)[j],Ubicacion_Actualizada$NOMBRE_ACCESIBILIDAD[j],\n                                  as.character(Ubicacion_Actualizada$RED_DE_ESCUELAS_LIDERES[j]), as.character(Ubicacion_Actualizada$DEPENDENCIA[j]), \n                                  sep = \"-\", collapse = NULL) \n\n}\n\nUbicacion_Actualizada%>%left_join(GRUPOS_COLEGIOS,by=\"CodGrupo\")->Entregable_Colegio_Grupos\n\nwrite.csv(Entregable_Colegio_Grupos,\"Entregable_Colegio_Grupos.csv\")\n\n\n\n\n\n###################################################################\n\n\n\nColegios_muestra<-sample(1:nrow(Ubicacion_Actualizada_TMP),.20*nrow(Ubicacion_Actualizada_TMP))\nUbicacion_Actualizada_TMP<-Ubicacion_Actualizada_TMP[Colegios_muestra,]\n\nServicios_muestra<-sample(1:nrow(Dim_Servicios),.40*nrow(Dim_Servicios))\nDim_Servicios_Muestra<-Dim_Servicios[Servicios_muestra,]\n\n####### Función Objetivo ################################\n\n### Vectores de Costo Colegios\n\nPrecio_PC_Colegio<-matrix(nrow=length(Ubicacion_Actualizada_TMP$RBD),ncol=length(Dim_Servicios_Muestra$SERVICIO))\nPrecio_PP_Colegio<-matrix(nrow=length(Ubicacion_Actualizada_TMP$RBD),ncol=length(Dim_Servicios_Muestra$SERVICIO))\nPrecio_Traslado  <-matrix(nrow=length(Ubicacion_Actualizada_TMP$RBD),ncol=length(Dim_Servicios_Muestra$SERVICIO))\n\n### Vectores de Costo Ziemax\n\nCosto_HHProfesor_Ziemax   <-matrix(nrow=length(Ubicacion_Actualizada_TMP$RBD),ncol=length(Dim_Servicios_Muestra$SERVICIO))\nCosto_HHInformatica_Ziemax<-matrix(nrow=length(Ubicacion_Actualizada_TMP$RBD),ncol=length(Dim_Servicios_Muestra$SERVICIO))\nCosto_Traslado_Ziemax     <-matrix(nrow=length(Ubicacion_Actualizada_TMP$RBD),ncol=length(Dim_Servicios_Muestra$SERVICIO))\n\n\n### Def Funcion Objetivo\n## Max = Precio - Costo\n\nTotal=length(Dim_Servicios_Muestra$SERVICIO)*length(Ubicacion_Actualizada_TMP$RBD)\nFunObj_Matriz  <-matrix(nrow=length(Ubicacion_Actualizada_TMP$RBD),ncol=length(Dim_Servicios_Muestra$SERVICIO))\nFun_Obj <-matrix(nrow=1,ncol=length(Dim_Servicios_Muestra$SERVICIO)*length(Ubicacion_Actualizada_TMP$RBD)) \n\n\nfor(i in 1:length(Ubicacion_Actualizada_TMP$RBD)) \n  { for(j in 1:length(Dim_Servicios_Muestra$SERVICIO))\n    {\n    \n    ### Vectores de Costo para colegio\n    \n    Precio_PC_Colegio[i,j]= Dim_Servicios_Muestra$PC[j]*\n                              if (Dim_Servicios_Muestra$TIPO_SERVICIO[j]==\"presencial\") \n                                {\n                                  ifelse(Ubicacion_Actualizada_TMP$NOMBRE_ACCESIBILIDAD[i]==0,0,1)\n                                } else {1}\n      \n    Precio_PP_Colegio[i,j]= Dim_Servicios_Muestra$PP[j]*\n                          ifelse(is.na(Dim_Servicios_Muestra$COSTO_HORA[j]),0,Dim_Servicios_Muestra$COSTO_HORA[j])*\n                          ifelse(is.na(Dim_Servicios_Muestra$HORAS_SERVICIO[j]),0,Dim_Servicios_Muestra$HORAS_SERVICIO[j])*\n                          (Ubicacion_Actualizada_TMP$MAT_TOTAL[i])*0.1*\n                          if (Dim_Servicios_Muestra$TIPO_SERVICIO[j]==\"presencial\") \n                            {\n                              ifelse(Ubicacion_Actualizada_TMP$NOMBRE_ACCESIBILIDAD[i]==0,0,1)\n                            } else {1}\n    \n    ## Solo la mitad del precio de traslado de pasa al cliente\n    Precio_Traslado[i,j]=Dim_Servicios_Muestra$COSTO_TRASLADO[j]*\n                        (Ubicacion_Actualizada_TMP$NOMBRE_ACCESIBILIDAD[i])/2\n    \n    ### Vectores de Costo para Ziemax\n    \n    Costo_HHInformatica_Ziemax[i,j]=  Dim_Servicios_Muestra$COSTO_ZIE_HH_INFOR[j]*Dim_Servicios_Muestra$EXPERTISE_INFOR[j]\n    \n    Costo_HHProfesor_Ziemax[i,j]   =  Dim_Servicios_Muestra$COSTO_ZIE_HH[j]*Dim_Servicios_Muestra$COSTO_EXP_ZIEMAX[j]*                           \n                                         if (Dim_Servicios_Muestra$TIPO_SERVICIO[j]==\"presencial\") \n                                           {\n                                            ifelse(Ubicacion_Actualizada_TMP$NOMBRE_ACCESIBILIDAD[i]==0,0,1)\n                                           } else {1}\n    \n    Costo_Traslado_Ziemax[i,j]     =  Dim_Servicios_Muestra$COSTO_TRASLADO[j]*\n                                      Ubicacion_Actualizada_TMP$NOMBRE_ACCESIBILIDAD[i]\n\n    } \n  }\n\n\n\n### Función Objetivo\n\nfor(i in 1:length(Ubicacion_Actualizada_TMP$RBD)) \n  { for(j in 1:length(Dim_Servicios_Muestra$SERVICIO))\n      { \n            FunObj_Matriz[i,j]=Precio_PC_Colegio[i,j]+Precio_PP_Colegio[i,j]+Precio_Traslado[i,j]-\n                               Costo_HHProfesor_Ziemax[i,j]-Costo_HHInformatica_Ziemax[i,j]-Costo_Traslado_Ziemax[i,j]\n            \n      } \n}\n\nfor(i in 1:length(Ubicacion_Actualizada_TMP$RBD)) \n  { for(j in 1:length(Dim_Servicios_Muestra$SERVICIO))\n      { \n      for(k in 1:Total)\n        {\n          Fun_Obj[k]=FunObj_Matriz[i,j]\n          } \n      } \n  }\n\nView(Fun_Obj)\n\n############ Restricciones ###########################################################\n\n##1. No se pueden repetir los servicios: No puede haber dos servicios iguales\nMatriz_Unicidad<-matrix(nrow=length(Ubicacion_Actualizada_TMP$RBD)*length(Dim_Servicios_Muestra$SERVICIO),\n                        ncol=length(Ubicacion_Actualizada_TMP$RBD)*length(Dim_Servicios_Muestra$SERVICIO))\n\n##2. Cada Colegio debe tener por lo menos un servicio\nMatriz_existe<--matrix(nrow=length(Ubicacion_Actualizada_TMP$RBD)*length(Dim_Servicios_Muestra$SERVICIO),\n                       ncol=length(Ubicacion_Actualizada_TMP$RBD)*length(Dim_Servicios_Muestra$SERVICIO))\n\n##3. Algunas combinaciones no pueden darse (relacionado a la jerarquia)\n\nMatriz_Limite_Combi<--matrix(nrow=length(Ubicacion_Actualizada_TMP$RBD)*length(Dim_Servicios_Muestra$SERVICIO),\n                             ncol=length(Ubicacion_Actualizada_TMP$RBD)*length(Dim_Servicios_Muestra$SERVICIO))\n\n\n#### Definiciones de Restricciones\n\nMatriz_Unicidad<-diag(rep(1,length(Ubicacion_Actualizada_TMP$RBD)*length(Dim_Servicios_Muestra$SERVICIO)))\n\n\nfor(i in 1:length(Ubicacion_Actualizada_TMP$RBD))\n\n  sum()\n  Matriz_existe[i,j]\n\n##4. Variables enteras Entera\ntipos<- matrix(ncol=1,nrow=(length(Ubicacion_Actualizada_TMP$RBD)+\n                            length(Ubicacion_Actualizada_TMP$RBD)+\n                            length(Ubicacion_Actualizada_TMP$RBD)))\nfor(k in 1:Total) { tipos[k]=\"I\"} \n\n## direccion\n#direccion<- matrix(ncol=1,nrow=length(Dim_Servicios_Muestra$SERVICIO)*length(Ubicacion_Actualizada_TMP$RBD))\n\n\n############ Solucion ################################################################\n\nResultado_Ziemax <-\n  Rglpk_solve_LP(\n    Fun_Obj,                   # Funcion Objetivo\n    restricciones,             # Restricciones\n    direccion,                 # Desigualdad\n    LadoDerecho_restricciones, # Lado derecho de restricciones\n    types = tipos,             # Tipo de variables (entera o continua)\n    max = TRUE                  # Maximizacion o minimizacion\n  )\n\n",
    "created" : 1509635809008.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1513204274",
    "id" : "89EA965E",
    "lastKnownWriteTime" : 1509629462,
    "last_content_update" : 1509629462,
    "path" : "C:/Users/César/Desktop/Clientes/Ziemax/Avance/Codigo Analisis_v4.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}